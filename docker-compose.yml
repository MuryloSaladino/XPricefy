version: "3.8"
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: "npm start"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/src
      - /src/bin
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - SECRET_KEY="wuifeboawsijdfsdjfniwerunfaoweunvcflsakjdvbliauwrencjilwaeudjvfilaWSUEJDHVCF"
      - EXPIRE_HOURS=3
      - DATABASE_URL=Server=db;Database=master;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
    depends_on:
      - db
    command: >
      bash -c "
        echo 'Waiting for SQL Server to be ready...';
        /wait-for-it.sh db:1433 -- echo 'SQL Server is up, running migrations...';
        dotnet ef database update;
        dotnet watch run --urls=http://0.0.0.0:5000"
    networks:
      - backend_network

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - backend_network

volumes:
  sql_data:

networks:
  backend_network:
    driver: bridge